ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"rightEncTimer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	rightEncTimer_initVar
  19              		.bss
  20              		.type	rightEncTimer_initVar, %object
  21              		.size	rightEncTimer_initVar, 1
  22              	rightEncTimer_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.rightEncTimer_Init,"ax",%progbits
  25              		.align	2
  26              		.global	rightEncTimer_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	rightEncTimer_Init, %function
  30              	rightEncTimer_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\rightEncTimer.c"
   1:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/rightEncTimer.c **** * File Name: rightEncTimer.c  
   3:.\Generated_Source\PSoC5/rightEncTimer.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/rightEncTimer.c **** *
   5:.\Generated_Source\PSoC5/rightEncTimer.c **** *  Description:
   6:.\Generated_Source\PSoC5/rightEncTimer.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:.\Generated_Source\PSoC5/rightEncTimer.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:.\Generated_Source\PSoC5/rightEncTimer.c **** *
   9:.\Generated_Source\PSoC5/rightEncTimer.c **** *   Note:
  10:.\Generated_Source\PSoC5/rightEncTimer.c **** *     None
  11:.\Generated_Source\PSoC5/rightEncTimer.c **** *
  12:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/rightEncTimer.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/rightEncTimer.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC5/rightEncTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC5/rightEncTimer.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/rightEncTimer.c **** 
  19:.\Generated_Source\PSoC5/rightEncTimer.c **** #include "rightEncTimer.h"
  20:.\Generated_Source\PSoC5/rightEncTimer.c **** 
  21:.\Generated_Source\PSoC5/rightEncTimer.c **** uint8 rightEncTimer_initVar = 0u;
  22:.\Generated_Source\PSoC5/rightEncTimer.c **** 
  23:.\Generated_Source\PSoC5/rightEncTimer.c **** 
  24:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_Init
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 2


  26:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
  27:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
  28:.\Generated_Source\PSoC5/rightEncTimer.c **** *     Initialize to the schematic state
  29:.\Generated_Source\PSoC5/rightEncTimer.c **** * 
  30:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void  
  32:.\Generated_Source\PSoC5/rightEncTimer.c **** *
  33:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
  34:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
  35:.\Generated_Source\PSoC5/rightEncTimer.c **** *
  36:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_Init(void) 
  38:.\Generated_Source\PSoC5/rightEncTimer.c **** {
  33              		.loc 1 38 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if (!rightEncTimer_UsingFixedFunction && !rightEncTimer_ControlRegRemoved)
  40:.\Generated_Source\PSoC5/rightEncTimer.c ****             uint8 ctrl;
  41:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (!rightEncTimer_UsingFixedFunction && !rightEncTimer_ControlRegRemoved) */
  42:.\Generated_Source\PSoC5/rightEncTimer.c ****         
  43:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if(!rightEncTimer_UsingFixedFunction) 
  44:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Interrupt State Backup for Critical Region*/
  45:.\Generated_Source\PSoC5/rightEncTimer.c ****             uint8 rightEncTimer_interruptState;
  46:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (!rightEncTimer_UsingFixedFunction) */
  47:.\Generated_Source\PSoC5/rightEncTimer.c ****         
  48:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if (rightEncTimer_UsingFixedFunction)
  49:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_CONTROL &= rightEncTimer_CTRL_ENABLE;
  51:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  52:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Clear the mode bits for continuous run mode */
  53:.\Generated_Source\PSoC5/rightEncTimer.c ****             #if (CY_PSOC5A)
  54:.\Generated_Source\PSoC5/rightEncTimer.c ****                 rightEncTimer_CONTROL2 &= ((uint8)(~rightEncTimer_CTRL_MODE_MASK));
  55:.\Generated_Source\PSoC5/rightEncTimer.c ****             #endif /* (CY_PSOC5A) */
  56:.\Generated_Source\PSoC5/rightEncTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:.\Generated_Source\PSoC5/rightEncTimer.c ****                 rightEncTimer_CONTROL3 &= ((uint8)(~rightEncTimer_CTRL_MODE_MASK));                
  58:.\Generated_Source\PSoC5/rightEncTimer.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:.\Generated_Source\PSoC5/rightEncTimer.c ****             #if (rightEncTimer_RunModeUsed != 0x0u)
  61:.\Generated_Source\PSoC5/rightEncTimer.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:.\Generated_Source\PSoC5/rightEncTimer.c ****                 rightEncTimer_CONTROL |= rightEncTimer_ONESHOT;
  63:.\Generated_Source\PSoC5/rightEncTimer.c ****             #endif /* (rightEncTimer_RunModeUsed != 0x0u) */
  64:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  65:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Set the IRQ to use the status register interrupts */
  66:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_CONTROL2 |= rightEncTimer_CTRL2_IRQ_SEL;
  67:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  68:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_RT1 &= ((uint8)(~rightEncTimer_RT1_MASK));
  70:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_RT1 |= rightEncTimer_SYNC;     
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 3


  71:.\Generated_Source\PSoC5/rightEncTimer.c ****                     
  72:.\Generated_Source\PSoC5/rightEncTimer.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_RT1 &= ((uint8)(~rightEncTimer_SYNCDSI_MASK));
  74:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_RT1 |= rightEncTimer_SYNCDSI_EN;
  75:.\Generated_Source\PSoC5/rightEncTimer.c **** 
  76:.\Generated_Source\PSoC5/rightEncTimer.c ****         #else
  77:.\Generated_Source\PSoC5/rightEncTimer.c ****             #if(!rightEncTimer_ControlRegRemoved)
  78:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Set the default compare mode defined in the parameter */
  79:.\Generated_Source\PSoC5/rightEncTimer.c ****             ctrl = rightEncTimer_CONTROL & ((uint8)(~rightEncTimer_CTRL_CMPMODE_MASK));
  45              		.loc 1 79 0
  46 0006 1C4B     		ldr	r3, .L2
  47 0008 1B78     		ldrb	r3, [r3]
  48 000a DBB2     		uxtb	r3, r3
  49 000c 23F00703 		bic	r3, r3, #7
  50 0010 FB71     		strb	r3, [r7, #7]
  80:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_CONTROL = ctrl | rightEncTimer_DEFAULT_COMPARE_MODE;
  51              		.loc 1 80 0
  52 0012 194A     		ldr	r2, .L2
  53 0014 FB79     		ldrb	r3, [r7, #7]
  54 0016 43F00103 		orr	r3, r3, #1
  55 001a DBB2     		uxtb	r3, r3
  56 001c 1370     		strb	r3, [r2]
  81:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  82:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Set the default capture mode defined in the parameter */
  83:.\Generated_Source\PSoC5/rightEncTimer.c ****             ctrl = rightEncTimer_CONTROL & ((uint8)(~rightEncTimer_CTRL_CAPMODE_MASK));
  57              		.loc 1 83 0
  58 001e 164B     		ldr	r3, .L2
  59 0020 1B78     		ldrb	r3, [r3]
  60 0022 DBB2     		uxtb	r3, r3
  61 0024 23F00303 		bic	r3, r3, #3
  62 0028 FB71     		strb	r3, [r7, #7]
  84:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  85:.\Generated_Source\PSoC5/rightEncTimer.c ****             #if( 0 != rightEncTimer_CAPTURE_MODE_CONF)
  86:.\Generated_Source\PSoC5/rightEncTimer.c ****                 rightEncTimer_CONTROL = ctrl | rightEncTimer_DEFAULT_CAPTURE_MODE;
  87:.\Generated_Source\PSoC5/rightEncTimer.c ****             #else
  88:.\Generated_Source\PSoC5/rightEncTimer.c ****                 rightEncTimer_CONTROL = ctrl;
  63              		.loc 1 88 0
  64 002a 134A     		ldr	r2, .L2
  65 002c FB79     		ldrb	r3, [r7, #7]
  66 002e 1370     		strb	r3, [r2]
  89:.\Generated_Source\PSoC5/rightEncTimer.c ****             #endif /* 0 != rightEncTimer_CAPTURE_MODE */ 
  90:.\Generated_Source\PSoC5/rightEncTimer.c ****             
  91:.\Generated_Source\PSoC5/rightEncTimer.c ****             #endif /* (!rightEncTimer_ControlRegRemoved) */
  92:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (rightEncTimer_UsingFixedFunction) */
  93:.\Generated_Source\PSoC5/rightEncTimer.c ****         
  94:.\Generated_Source\PSoC5/rightEncTimer.c ****         /* Clear all data in the FIFO's */
  95:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if (!rightEncTimer_UsingFixedFunction)
  96:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_ClearFIFO();
  67              		.loc 1 96 0
  68 0030 FFF7FEFF 		bl	rightEncTimer_ClearFIFO
  97:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (!rightEncTimer_UsingFixedFunction) */
  98:.\Generated_Source\PSoC5/rightEncTimer.c ****         
  99:.\Generated_Source\PSoC5/rightEncTimer.c ****         /* Set Initial values from Configuration */
 100:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_WritePeriod(rightEncTimer_INIT_PERIOD_VALUE);
  69              		.loc 1 100 0
  70 0034 0020     		movs	r0, #0
  71 0036 FFF7FEFF 		bl	rightEncTimer_WritePeriod
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 4


 101:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if (!(rightEncTimer_UsingFixedFunction && (CY_PSOC5A)))
 102:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_WriteCounter(rightEncTimer_INIT_COUNTER_VALUE);
  72              		.loc 1 102 0
  73 003a 0020     		movs	r0, #0
  74 003c FFF7FEFF 		bl	rightEncTimer_WriteCounter
 103:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (!(rightEncTimer_UsingFixedFunction && (CY_PSOC5A))) */
 104:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_SetInterruptMode(rightEncTimer_INIT_INTERRUPTS_MASK);
  75              		.loc 1 104 0
  76 0040 0020     		movs	r0, #0
  77 0042 FFF7FEFF 		bl	rightEncTimer_SetInterruptMode
 105:.\Generated_Source\PSoC5/rightEncTimer.c ****         
 106:.\Generated_Source\PSoC5/rightEncTimer.c ****         #if (!rightEncTimer_UsingFixedFunction)
 107:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Read the status register to clear the unwanted interrupts */
 108:.\Generated_Source\PSoC5/rightEncTimer.c ****             (void)rightEncTimer_ReadStatusRegister();
  78              		.loc 1 108 0
  79 0046 FFF7FEFF 		bl	rightEncTimer_ReadStatusRegister
 109:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_WriteCompare(rightEncTimer_INIT_COMPARE_VALUE);
  80              		.loc 1 110 0
  81 004a 0020     		movs	r0, #0
  82 004c FFF7FEFF 		bl	rightEncTimer_WriteCompare
 111:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:.\Generated_Source\PSoC5/rightEncTimer.c ****             
 113:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Enter Critical Region*/
 115:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_interruptState = CyEnterCriticalSection();
  83              		.loc 1 115 0
  84 0050 FFF7FEFF 		bl	CyEnterCriticalSection
  85 0054 0346     		mov	r3, r0
  86 0056 BB71     		strb	r3, [r7, #6]
 116:.\Generated_Source\PSoC5/rightEncTimer.c ****             
 117:.\Generated_Source\PSoC5/rightEncTimer.c ****             rightEncTimer_STATUS_AUX_CTRL |= rightEncTimer_STATUS_ACTL_INT_EN_MASK;
  87              		.loc 1 117 0
  88 0058 084A     		ldr	r2, .L2+4
  89 005a 084B     		ldr	r3, .L2+4
  90 005c 1B78     		ldrb	r3, [r3]
  91 005e DBB2     		uxtb	r3, r3
  92 0060 43F01003 		orr	r3, r3, #16
  93 0064 DBB2     		uxtb	r3, r3
  94 0066 1370     		strb	r3, [r2]
 118:.\Generated_Source\PSoC5/rightEncTimer.c ****             
 119:.\Generated_Source\PSoC5/rightEncTimer.c ****             /* Exit Critical Region*/
 120:.\Generated_Source\PSoC5/rightEncTimer.c ****             CyExitCriticalSection(rightEncTimer_interruptState);
  95              		.loc 1 120 0
  96 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  97 006a 1846     		mov	r0, r3
  98 006c FFF7FEFF 		bl	CyExitCriticalSection
 121:.\Generated_Source\PSoC5/rightEncTimer.c ****             
 122:.\Generated_Source\PSoC5/rightEncTimer.c ****         #endif /* (!rightEncTimer_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/rightEncTimer.c **** }
  99              		.loc 1 123 0
 100 0070 0837     		adds	r7, r7, #8
 101              		.cfi_def_cfa_offset 8
 102 0072 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0074 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 5


 106              	.L3:
 107 0076 00BF     		.align	2
 108              	.L2:
 109 0078 74650040 		.word	1073767796
 110 007c 95650040 		.word	1073767829
 111              		.cfi_endproc
 112              	.LFE0:
 113              		.size	rightEncTimer_Init, .-rightEncTimer_Init
 114              		.section	.text.rightEncTimer_Enable,"ax",%progbits
 115              		.align	2
 116              		.global	rightEncTimer_Enable
 117              		.thumb
 118              		.thumb_func
 119              		.type	rightEncTimer_Enable, %function
 120              	rightEncTimer_Enable:
 121              	.LFB1:
 124:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 125:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 126:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_Enable
 128:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 129:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 130:.\Generated_Source\PSoC5/rightEncTimer.c **** *     Enable the Counter
 131:.\Generated_Source\PSoC5/rightEncTimer.c **** * 
 132:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 133:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void  
 134:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 135:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 136:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 137:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 138:.\Generated_Source\PSoC5/rightEncTimer.c **** * Side Effects: 
 139:.\Generated_Source\PSoC5/rightEncTimer.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:.\Generated_Source\PSoC5/rightEncTimer.c **** *   on the operation of the counter.
 141:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 142:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_Enable(void) 
 144:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 122              		.loc 1 144 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0000 80B4     		push	{r7}
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if (rightEncTimer_UsingFixedFunction)
 147:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_ENABLE |= rightEncTimer_BLOCK_EN_MASK;
 148:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_STBY_ENABLE |= rightEncTimer_BLOCK_STBY_EN_MASK;
 149:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */  
 150:.\Generated_Source\PSoC5/rightEncTimer.c ****         
 151:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Enable the counter from the control register  */
 152:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* else make sure reset is clear */
 154:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(!rightEncTimer_ControlRegRemoved || rightEncTimer_UsingFixedFunction)
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 6


 155:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_CONTROL |= rightEncTimer_CTRL_ENABLE;                
 132              		.loc 1 155 0
 133 0004 054A     		ldr	r2, .L5
 134 0006 054B     		ldr	r3, .L5
 135 0008 1B78     		ldrb	r3, [r3]
 136 000a DBB2     		uxtb	r3, r3
 137 000c 63F07F03 		orn	r3, r3, #127
 138 0010 DBB2     		uxtb	r3, r3
 139 0012 1370     		strb	r3, [r2]
 156:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (!rightEncTimer_ControlRegRemoved || rightEncTimer_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 158:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 140              		.loc 1 158 0
 141 0014 BD46     		mov	sp, r7
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 0016 5DF8047B 		ldr	r7, [sp], #4
 145              		.cfi_restore 7
 146              		.cfi_def_cfa_offset 0
 147 001a 7047     		bx	lr
 148              	.L6:
 149              		.align	2
 150              	.L5:
 151 001c 74650040 		.word	1073767796
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	rightEncTimer_Enable, .-rightEncTimer_Enable
 155              		.section	.text.rightEncTimer_Start,"ax",%progbits
 156              		.align	2
 157              		.global	rightEncTimer_Start
 158              		.thumb
 159              		.thumb_func
 160              		.type	rightEncTimer_Start, %function
 161              	rightEncTimer_Start:
 162              	.LFB2:
 159:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 160:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 161:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_Start
 163:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 164:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 165:.\Generated_Source\PSoC5/rightEncTimer.c **** *  Enables the counter for operation 
 166:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 167:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 168:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void  
 169:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 170:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 171:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 172:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 173:.\Generated_Source\PSoC5/rightEncTimer.c **** * Global variables:
 174:.\Generated_Source\PSoC5/rightEncTimer.c **** *  rightEncTimer_initVar: Is modified when this function is called for the  
 175:.\Generated_Source\PSoC5/rightEncTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 176:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 177:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 178:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_Start(void) 
 179:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 163              		.loc 1 179 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 7


 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 180:.\Generated_Source\PSoC5/rightEncTimer.c ****     if(rightEncTimer_initVar == 0u)
 173              		.loc 1 180 0
 174 0004 054B     		ldr	r3, .L9
 175 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176 0008 002B     		cmp	r3, #0
 177 000a 04D1     		bne	.L8
 181:.\Generated_Source\PSoC5/rightEncTimer.c ****     {
 182:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_Init();
 178              		.loc 1 182 0
 179 000c FFF7FEFF 		bl	rightEncTimer_Init
 183:.\Generated_Source\PSoC5/rightEncTimer.c ****         
 184:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_initVar = 1u; /* Clear this bit for Initialization */        
 180              		.loc 1 184 0
 181 0010 024B     		ldr	r3, .L9
 182 0012 0122     		movs	r2, #1
 183 0014 1A70     		strb	r2, [r3]
 184              	.L8:
 185:.\Generated_Source\PSoC5/rightEncTimer.c ****     }
 186:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 187:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Enable the Counter */
 188:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_Enable();        
 185              		.loc 1 188 0
 186 0016 FFF7FEFF 		bl	rightEncTimer_Enable
 189:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 187              		.loc 1 189 0
 188 001a 80BD     		pop	{r7, pc}
 189              	.L10:
 190              		.align	2
 191              	.L9:
 192 001c 00000000 		.word	rightEncTimer_initVar
 193              		.cfi_endproc
 194              	.LFE2:
 195              		.size	rightEncTimer_Start, .-rightEncTimer_Start
 196              		.section	.text.rightEncTimer_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	rightEncTimer_Stop
 199              		.thumb
 200              		.thumb_func
 201              		.type	rightEncTimer_Stop, %function
 202              	rightEncTimer_Stop:
 203              	.LFB3:
 190:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 191:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 192:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_Stop
 194:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 195:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 196:.\Generated_Source\PSoC5/rightEncTimer.c **** * Halts the counter, but does not change any modes or disable interrupts.
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 8


 197:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 198:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 199:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void  
 200:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 201:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 202:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 203:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 204:.\Generated_Source\PSoC5/rightEncTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:.\Generated_Source\PSoC5/rightEncTimer.c **** *               has no effect on the operation of the counter.
 206:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 207:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_Stop(void) 
 209:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 204              		.loc 1 209 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 80B4     		push	{r7}
 210              		.cfi_def_cfa_offset 4
 211              		.cfi_offset 7, -4
 212 0002 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
 210:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Disable Counter */
 211:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(!rightEncTimer_ControlRegRemoved || rightEncTimer_UsingFixedFunction)
 212:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_CONTROL &= ((uint8)(~rightEncTimer_CTRL_ENABLE));        
 214              		.loc 1 212 0
 215 0004 054A     		ldr	r2, .L12
 216 0006 054B     		ldr	r3, .L12
 217 0008 1B78     		ldrb	r3, [r3]
 218 000a DBB2     		uxtb	r3, r3
 219 000c 03F07F03 		and	r3, r3, #127
 220 0010 DBB2     		uxtb	r3, r3
 221 0012 1370     		strb	r3, [r2]
 213:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (!rightEncTimer_ControlRegRemoved || rightEncTimer_UsingFixedFunction) */
 214:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 215:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 216:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if (rightEncTimer_UsingFixedFunction)
 217:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_ENABLE &= ((uint8)(~rightEncTimer_BLOCK_EN_MASK));
 218:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~rightEncTimer_BLOCK_STBY_EN_MASK));
 219:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 220:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 222              		.loc 1 220 0
 223 0014 BD46     		mov	sp, r7
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 0016 5DF8047B 		ldr	r7, [sp], #4
 227              		.cfi_restore 7
 228              		.cfi_def_cfa_offset 0
 229 001a 7047     		bx	lr
 230              	.L13:
 231              		.align	2
 232              	.L12:
 233 001c 74650040 		.word	1073767796
 234              		.cfi_endproc
 235              	.LFE3:
 236              		.size	rightEncTimer_Stop, .-rightEncTimer_Stop
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 9


 237              		.section	.text.rightEncTimer_SetInterruptMode,"ax",%progbits
 238              		.align	2
 239              		.global	rightEncTimer_SetInterruptMode
 240              		.thumb
 241              		.thumb_func
 242              		.type	rightEncTimer_SetInterruptMode, %function
 243              	rightEncTimer_SetInterruptMode:
 244              	.LFB4:
 221:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 222:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 223:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_SetInterruptMode
 225:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 226:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 227:.\Generated_Source\PSoC5/rightEncTimer.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 229:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 230:.\Generated_Source\PSoC5/rightEncTimer.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:.\Generated_Source\PSoC5/rightEncTimer.c **** *                   which will be allowed to generate the counters interrupt.   
 232:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 233:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 234:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 235:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 236:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 237:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_SetInterruptMode(uint8 interruptsMask) 
 238:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 245              		.loc 1 238 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 80B4     		push	{r7}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 0346     		mov	r3, r0
 258 0008 FB71     		strb	r3, [r7, #7]
 239:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_STATUS_MASK = interruptsMask;
 259              		.loc 1 239 0
 260 000a 044A     		ldr	r2, .L15
 261 000c FB79     		ldrb	r3, [r7, #7]
 262 000e 1370     		strb	r3, [r2]
 240:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 263              		.loc 1 240 0
 264 0010 0C37     		adds	r7, r7, #12
 265              		.cfi_def_cfa_offset 4
 266 0012 BD46     		mov	sp, r7
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 0014 5DF8047B 		ldr	r7, [sp], #4
 270              		.cfi_restore 7
 271              		.cfi_def_cfa_offset 0
 272 0018 7047     		bx	lr
 273              	.L16:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 10


 274 001a 00BF     		.align	2
 275              	.L15:
 276 001c 85650040 		.word	1073767813
 277              		.cfi_endproc
 278              	.LFE4:
 279              		.size	rightEncTimer_SetInterruptMode, .-rightEncTimer_SetInterruptMode
 280              		.section	.text.rightEncTimer_ReadStatusRegister,"ax",%progbits
 281              		.align	2
 282              		.global	rightEncTimer_ReadStatusRegister
 283              		.thumb
 284              		.thumb_func
 285              		.type	rightEncTimer_ReadStatusRegister, %function
 286              	rightEncTimer_ReadStatusRegister:
 287              	.LFB5:
 241:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 242:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 243:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadStatusRegister
 245:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 247:.\Generated_Source\PSoC5/rightEncTimer.c **** *   Reads the status register and returns it's state. This function should use
 248:.\Generated_Source\PSoC5/rightEncTimer.c **** *       defined types for the bit-field information as the bits in this
 249:.\Generated_Source\PSoC5/rightEncTimer.c **** *       register may be permuteable.
 250:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 251:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 252:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 253:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 254:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 255:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint8) The contents of the status register
 256:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 257:.\Generated_Source\PSoC5/rightEncTimer.c **** * Side Effects:
 258:.\Generated_Source\PSoC5/rightEncTimer.c **** *   Status register bits may be clear on read. 
 259:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 260:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC5/rightEncTimer.c **** uint8   rightEncTimer_ReadStatusRegister(void) 
 262:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 288              		.loc 1 262 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 0000 80B4     		push	{r7}
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 263:.\Generated_Source\PSoC5/rightEncTimer.c ****     return rightEncTimer_STATUS;
 298              		.loc 1 263 0
 299 0004 034B     		ldr	r3, .L19
 300 0006 1B78     		ldrb	r3, [r3]
 301 0008 DBB2     		uxtb	r3, r3
 264:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 302              		.loc 1 264 0
 303 000a 1846     		mov	r0, r3
 304 000c BD46     		mov	sp, r7
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 11


 307 000e 5DF8047B 		ldr	r7, [sp], #4
 308              		.cfi_restore 7
 309              		.cfi_def_cfa_offset 0
 310 0012 7047     		bx	lr
 311              	.L20:
 312              		.align	2
 313              	.L19:
 314 0014 65650040 		.word	1073767781
 315              		.cfi_endproc
 316              	.LFE5:
 317              		.size	rightEncTimer_ReadStatusRegister, .-rightEncTimer_ReadStatusRegister
 318              		.section	.text.rightEncTimer_ReadControlRegister,"ax",%progbits
 319              		.align	2
 320              		.global	rightEncTimer_ReadControlRegister
 321              		.thumb
 322              		.thumb_func
 323              		.type	rightEncTimer_ReadControlRegister, %function
 324              	rightEncTimer_ReadControlRegister:
 325              	.LFB6:
 265:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 266:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 267:.\Generated_Source\PSoC5/rightEncTimer.c **** #if(!rightEncTimer_ControlRegRemoved)
 268:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadControlRegister
 270:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 272:.\Generated_Source\PSoC5/rightEncTimer.c **** *   Reads the control register and returns it's state. This function should use
 273:.\Generated_Source\PSoC5/rightEncTimer.c **** *       defined types for the bit-field information as the bits in this
 274:.\Generated_Source\PSoC5/rightEncTimer.c **** *       register may be permuteable.
 275:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 276:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 277:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 278:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 279:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 280:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint8) The contents of the control register
 281:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 282:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 283:.\Generated_Source\PSoC5/rightEncTimer.c **** uint8   rightEncTimer_ReadControlRegister(void) 
 284:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 326              		.loc 1 284 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 0000 80B4     		push	{r7}
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 285:.\Generated_Source\PSoC5/rightEncTimer.c ****     return rightEncTimer_CONTROL;
 336              		.loc 1 285 0
 337 0004 034B     		ldr	r3, .L23
 338 0006 1B78     		ldrb	r3, [r3]
 339 0008 DBB2     		uxtb	r3, r3
 286:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 340              		.loc 1 286 0
 341 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 12


 342 000c BD46     		mov	sp, r7
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 000e 5DF8047B 		ldr	r7, [sp], #4
 346              		.cfi_restore 7
 347              		.cfi_def_cfa_offset 0
 348 0012 7047     		bx	lr
 349              	.L24:
 350              		.align	2
 351              	.L23:
 352 0014 74650040 		.word	1073767796
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	rightEncTimer_ReadControlRegister, .-rightEncTimer_ReadControlRegister
 356              		.section	.text.rightEncTimer_WriteControlRegister,"ax",%progbits
 357              		.align	2
 358              		.global	rightEncTimer_WriteControlRegister
 359              		.thumb
 360              		.thumb_func
 361              		.type	rightEncTimer_WriteControlRegister, %function
 362              	rightEncTimer_WriteControlRegister:
 363              	.LFB7:
 287:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 288:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 289:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_WriteControlRegister
 291:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 292:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 293:.\Generated_Source\PSoC5/rightEncTimer.c **** *   Sets the bit-field of the control register.  This function should use
 294:.\Generated_Source\PSoC5/rightEncTimer.c **** *       defined types for the bit-field information as the bits in this
 295:.\Generated_Source\PSoC5/rightEncTimer.c **** *       register may be permuteable.
 296:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 297:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 298:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 299:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 300:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 301:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint8) The contents of the control register
 302:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 303:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC5/rightEncTimer.c **** void    rightEncTimer_WriteControlRegister(uint8 control) 
 305:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 364              		.loc 1 305 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 0346     		mov	r3, r0
 377 0008 FB71     		strb	r3, [r7, #7]
 306:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_CONTROL = control;
 378              		.loc 1 306 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 13


 379 000a 044A     		ldr	r2, .L26
 380 000c FB79     		ldrb	r3, [r7, #7]
 381 000e 1370     		strb	r3, [r2]
 307:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 382              		.loc 1 307 0
 383 0010 0C37     		adds	r7, r7, #12
 384              		.cfi_def_cfa_offset 4
 385 0012 BD46     		mov	sp, r7
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0014 5DF8047B 		ldr	r7, [sp], #4
 389              		.cfi_restore 7
 390              		.cfi_def_cfa_offset 0
 391 0018 7047     		bx	lr
 392              	.L27:
 393 001a 00BF     		.align	2
 394              	.L26:
 395 001c 74650040 		.word	1073767796
 396              		.cfi_endproc
 397              	.LFE7:
 398              		.size	rightEncTimer_WriteControlRegister, .-rightEncTimer_WriteControlRegister
 399              		.section	.text.rightEncTimer_WriteCounter,"ax",%progbits
 400              		.align	2
 401              		.global	rightEncTimer_WriteCounter
 402              		.thumb
 403              		.thumb_func
 404              		.type	rightEncTimer_WriteCounter, %function
 405              	rightEncTimer_WriteCounter:
 406              	.LFB8:
 308:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 309:.\Generated_Source\PSoC5/rightEncTimer.c **** #endif  /* (!rightEncTimer_ControlRegRemoved) */
 310:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 311:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 312:.\Generated_Source\PSoC5/rightEncTimer.c **** #if (!(rightEncTimer_UsingFixedFunction && (CY_PSOC5A)))
 313:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 314:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_WriteCounter
 315:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 316:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 317:.\Generated_Source\PSoC5/rightEncTimer.c **** *   This funtion is used to set the counter to a specific value
 318:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 319:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 320:.\Generated_Source\PSoC5/rightEncTimer.c **** *  counter:  New counter value. 
 321:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 322:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 323:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void 
 324:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 325:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_WriteCounter(uint16 counter) \
 327:.\Generated_Source\PSoC5/rightEncTimer.c ****                                    
 328:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 407              		.loc 1 328 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412 0000 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 14


 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 329:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 330:.\Generated_Source\PSoC5/rightEncTimer.c ****         /* assert if block is already enabled */
 331:.\Generated_Source\PSoC5/rightEncTimer.c ****         CYASSERT (0u == (rightEncTimer_GLOBAL_ENABLE & rightEncTimer_BLOCK_EN_MASK));
 332:.\Generated_Source\PSoC5/rightEncTimer.c ****         /* If block is disabled, enable it and then write the counter */
 333:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_ENABLE |= rightEncTimer_BLOCK_EN_MASK;
 334:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_COUNTER_LSB_PTR, (uint16)counter);
 335:.\Generated_Source\PSoC5/rightEncTimer.c ****         rightEncTimer_GLOBAL_ENABLE &= ((uint8)(~rightEncTimer_BLOCK_EN_MASK));
 336:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 337:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_COUNTER_LSB_PTR, counter);
 421              		.loc 1 337 0
 422 000a 044A     		ldr	r2, .L29
 423 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 424 000e 1380     		strh	r3, [r2]	@ movhi
 338:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 339:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 425              		.loc 1 339 0
 426 0010 0C37     		adds	r7, r7, #12
 427              		.cfi_def_cfa_offset 4
 428 0012 BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0014 5DF8047B 		ldr	r7, [sp], #4
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0018 7047     		bx	lr
 435              	.L30:
 436 001a 00BF     		.align	2
 437              	.L29:
 438 001c 086A0040 		.word	1073768968
 439              		.cfi_endproc
 440              	.LFE8:
 441              		.size	rightEncTimer_WriteCounter, .-rightEncTimer_WriteCounter
 442              		.section	.text.rightEncTimer_ReadCounter,"ax",%progbits
 443              		.align	2
 444              		.global	rightEncTimer_ReadCounter
 445              		.thumb
 446              		.thumb_func
 447              		.type	rightEncTimer_ReadCounter, %function
 448              	rightEncTimer_ReadCounter:
 449              	.LFB9:
 340:.\Generated_Source\PSoC5/rightEncTimer.c **** #endif /* (!(rightEncTimer_UsingFixedFunction && (CY_PSOC5A))) */
 341:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 342:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 343:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadCounter
 345:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 346:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 347:.\Generated_Source\PSoC5/rightEncTimer.c **** * Returns the current value of the counter.  It doesn't matter
 348:.\Generated_Source\PSoC5/rightEncTimer.c **** * if the counter is enabled or running.
 349:.\Generated_Source\PSoC5/rightEncTimer.c **** *
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 15


 350:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 351:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void:  
 352:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 353:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 354:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint16) The present value of the counter.
 355:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 356:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/rightEncTimer.c **** uint16 rightEncTimer_ReadCounter(void) 
 358:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 450              		.loc 1 358 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 359:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Force capture by reading Accumulator */
 360:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Must first do a software capture to be able to read the counter */
 361:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 363:.\Generated_Source\PSoC5/rightEncTimer.c **** 		(void)CY_GET_REG16(rightEncTimer_COUNTER_LSB_PTR);
 364:.\Generated_Source\PSoC5/rightEncTimer.c **** 	#else
 365:.\Generated_Source\PSoC5/rightEncTimer.c **** 		(void)CY_GET_REG8(rightEncTimer_COUNTER_LSB_PTR_8BIT);
 460              		.loc 1 365 0
 461 0004 044B     		ldr	r3, .L33
 462 0006 1B78     		ldrb	r3, [r3]
 366:.\Generated_Source\PSoC5/rightEncTimer.c **** 	#endif/* (rightEncTimer_UsingFixedFunction) */
 367:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 368:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 370:.\Generated_Source\PSoC5/rightEncTimer.c ****         return ((uint16)CY_GET_REG16(rightEncTimer_STATICCOUNT_LSB_PTR));
 371:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 372:.\Generated_Source\PSoC5/rightEncTimer.c ****         return (CY_GET_REG16(rightEncTimer_STATICCOUNT_LSB_PTR));
 463              		.loc 1 372 0
 464 0008 044B     		ldr	r3, .L33+4
 465 000a 1B88     		ldrh	r3, [r3]	@ movhi
 466 000c 9BB2     		uxth	r3, r3
 373:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 374:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 467              		.loc 1 374 0
 468 000e 1846     		mov	r0, r3
 469 0010 BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0012 5DF8047B 		ldr	r7, [sp], #4
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 0016 7047     		bx	lr
 476              	.L34:
 477              		.align	2
 478              	.L33:
 479 0018 04650040 		.word	1073767684
 480 001c 886A0040 		.word	1073769096
 481              		.cfi_endproc
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 16


 482              	.LFE9:
 483              		.size	rightEncTimer_ReadCounter, .-rightEncTimer_ReadCounter
 484              		.section	.text.rightEncTimer_ReadCapture,"ax",%progbits
 485              		.align	2
 486              		.global	rightEncTimer_ReadCapture
 487              		.thumb
 488              		.thumb_func
 489              		.type	rightEncTimer_ReadCapture, %function
 490              	rightEncTimer_ReadCapture:
 491              	.LFB10:
 375:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 376:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 377:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadCapture
 379:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 381:.\Generated_Source\PSoC5/rightEncTimer.c **** *   This function returns the last value captured.
 382:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 383:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 384:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 385:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 386:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 387:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint16) Present Capture value.
 388:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 389:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC5/rightEncTimer.c **** uint16 rightEncTimer_ReadCapture(void) 
 391:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 492              		.loc 1 391 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497 0000 80B4     		push	{r7}
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 392:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 393:.\Generated_Source\PSoC5/rightEncTimer.c ****         return ((uint16)CY_GET_REG16(rightEncTimer_STATICCOUNT_LSB_PTR));
 394:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 395:.\Generated_Source\PSoC5/rightEncTimer.c ****         return (CY_GET_REG16(rightEncTimer_STATICCOUNT_LSB_PTR));
 502              		.loc 1 395 0
 503 0004 034B     		ldr	r3, .L37
 504 0006 1B88     		ldrh	r3, [r3]	@ movhi
 505 0008 9BB2     		uxth	r3, r3
 396:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 397:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 506              		.loc 1 397 0
 507 000a 1846     		mov	r0, r3
 508 000c BD46     		mov	sp, r7
 509              		.cfi_def_cfa_register 13
 510              		@ sp needed
 511 000e 5DF8047B 		ldr	r7, [sp], #4
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0012 7047     		bx	lr
 515              	.L38:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 17


 516              		.align	2
 517              	.L37:
 518 0014 886A0040 		.word	1073769096
 519              		.cfi_endproc
 520              	.LFE10:
 521              		.size	rightEncTimer_ReadCapture, .-rightEncTimer_ReadCapture
 522              		.section	.text.rightEncTimer_WritePeriod,"ax",%progbits
 523              		.align	2
 524              		.global	rightEncTimer_WritePeriod
 525              		.thumb
 526              		.thumb_func
 527              		.type	rightEncTimer_WritePeriod, %function
 528              	rightEncTimer_WritePeriod:
 529              	.LFB11:
 398:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 399:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 400:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 401:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_WritePeriod
 402:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 403:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 404:.\Generated_Source\PSoC5/rightEncTimer.c **** * Changes the period of the counter.  The new period 
 405:.\Generated_Source\PSoC5/rightEncTimer.c **** * will be loaded the next time terminal count is detected.
 406:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 407:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 408:.\Generated_Source\PSoC5/rightEncTimer.c **** *  period: (uint16) A value of 0 will result in
 409:.\Generated_Source\PSoC5/rightEncTimer.c **** *         the counter remaining at zero.  
 410:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 411:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 412:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 413:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 414:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_WritePeriod(uint16 period) 
 416:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 530              		.loc 1 416 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              		.cfi_def_cfa_offset 4
 537              		.cfi_offset 7, -4
 538 0002 83B0     		sub	sp, sp, #12
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 0346     		mov	r3, r0
 543 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 417:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 418:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_PERIOD_LSB_PTR,(uint16)period);
 419:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 420:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_PERIOD_LSB_PTR, period);
 544              		.loc 1 420 0
 545 000a 044A     		ldr	r2, .L40
 546 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 547 000e 1380     		strh	r3, [r2]	@ movhi
 421:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 422:.\Generated_Source\PSoC5/rightEncTimer.c **** }
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 18


 548              		.loc 1 422 0
 549 0010 0C37     		adds	r7, r7, #12
 550              		.cfi_def_cfa_offset 4
 551 0012 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0014 5DF8047B 		ldr	r7, [sp], #4
 555              		.cfi_restore 7
 556              		.cfi_def_cfa_offset 0
 557 0018 7047     		bx	lr
 558              	.L41:
 559 001a 00BF     		.align	2
 560              	.L40:
 561 001c 486A0040 		.word	1073769032
 562              		.cfi_endproc
 563              	.LFE11:
 564              		.size	rightEncTimer_WritePeriod, .-rightEncTimer_WritePeriod
 565              		.section	.text.rightEncTimer_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	rightEncTimer_ReadPeriod
 568              		.thumb
 569              		.thumb_func
 570              		.type	rightEncTimer_ReadPeriod, %function
 571              	rightEncTimer_ReadPeriod:
 572              	.LFB12:
 423:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 424:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 425:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadPeriod
 427:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 428:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 429:.\Generated_Source\PSoC5/rightEncTimer.c **** * Reads the current period value without affecting counter operation.
 430:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 431:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 432:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void:  
 433:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 434:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 435:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint16) Present period value.
 436:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 437:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 438:.\Generated_Source\PSoC5/rightEncTimer.c **** uint16 rightEncTimer_ReadPeriod(void) 
 439:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 573              		.loc 1 439 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 440:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 441:.\Generated_Source\PSoC5/rightEncTimer.c ****         return ((uint16)CY_GET_REG16(rightEncTimer_PERIOD_LSB_PTR));
 442:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 443:.\Generated_Source\PSoC5/rightEncTimer.c ****         return (CY_GET_REG16(rightEncTimer_PERIOD_LSB_PTR));
 583              		.loc 1 443 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 19


 584 0004 034B     		ldr	r3, .L44
 585 0006 1B88     		ldrh	r3, [r3]	@ movhi
 586 0008 9BB2     		uxth	r3, r3
 444:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 445:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 587              		.loc 1 445 0
 588 000a 1846     		mov	r0, r3
 589 000c BD46     		mov	sp, r7
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 000e 5DF8047B 		ldr	r7, [sp], #4
 593              		.cfi_restore 7
 594              		.cfi_def_cfa_offset 0
 595 0012 7047     		bx	lr
 596              	.L45:
 597              		.align	2
 598              	.L44:
 599 0014 486A0040 		.word	1073769032
 600              		.cfi_endproc
 601              	.LFE12:
 602              		.size	rightEncTimer_ReadPeriod, .-rightEncTimer_ReadPeriod
 603              		.section	.text.rightEncTimer_WriteCompare,"ax",%progbits
 604              		.align	2
 605              		.global	rightEncTimer_WriteCompare
 606              		.thumb
 607              		.thumb_func
 608              		.type	rightEncTimer_WriteCompare, %function
 609              	rightEncTimer_WriteCompare:
 610              	.LFB13:
 446:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 447:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 448:.\Generated_Source\PSoC5/rightEncTimer.c **** #if (!rightEncTimer_UsingFixedFunction)
 449:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 450:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_WriteCompare
 451:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 452:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 453:.\Generated_Source\PSoC5/rightEncTimer.c **** * Changes the compare value.  The compare output will 
 454:.\Generated_Source\PSoC5/rightEncTimer.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:.\Generated_Source\PSoC5/rightEncTimer.c **** * driven high when the present counter value compares true based on the 
 456:.\Generated_Source\PSoC5/rightEncTimer.c **** * configured compare mode setting. 
 457:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 458:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 459:.\Generated_Source\PSoC5/rightEncTimer.c **** *  Compare:  New compare value. 
 460:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 461:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 462:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 463:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 464:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_WriteCompare(uint16 compare) \
 466:.\Generated_Source\PSoC5/rightEncTimer.c ****                                    
 467:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 611              		.loc 1 467 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 8
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 20


 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 83B0     		sub	sp, sp, #12
 620              		.cfi_def_cfa_offset 16
 621 0004 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 623 0006 0346     		mov	r3, r0
 624 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 468:.\Generated_Source\PSoC5/rightEncTimer.c ****     #if(rightEncTimer_UsingFixedFunction)
 469:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_COMPARE_LSB_PTR, (uint16)compare);
 470:.\Generated_Source\PSoC5/rightEncTimer.c ****     #else
 471:.\Generated_Source\PSoC5/rightEncTimer.c ****         CY_SET_REG16(rightEncTimer_COMPARE_LSB_PTR, compare);
 625              		.loc 1 471 0
 626 000a 044A     		ldr	r2, .L47
 627 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 628 000e 1380     		strh	r3, [r2]	@ movhi
 472:.\Generated_Source\PSoC5/rightEncTimer.c ****     #endif /* (rightEncTimer_UsingFixedFunction) */
 473:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 629              		.loc 1 473 0
 630 0010 0C37     		adds	r7, r7, #12
 631              		.cfi_def_cfa_offset 4
 632 0012 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 0014 5DF8047B 		ldr	r7, [sp], #4
 636              		.cfi_restore 7
 637              		.cfi_def_cfa_offset 0
 638 0018 7047     		bx	lr
 639              	.L48:
 640 001a 00BF     		.align	2
 641              	.L47:
 642 001c 686A0040 		.word	1073769064
 643              		.cfi_endproc
 644              	.LFE13:
 645              		.size	rightEncTimer_WriteCompare, .-rightEncTimer_WriteCompare
 646              		.section	.text.rightEncTimer_ReadCompare,"ax",%progbits
 647              		.align	2
 648              		.global	rightEncTimer_ReadCompare
 649              		.thumb
 650              		.thumb_func
 651              		.type	rightEncTimer_ReadCompare, %function
 652              	rightEncTimer_ReadCompare:
 653              	.LFB14:
 474:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 475:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 476:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 477:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ReadCompare
 478:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 479:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 480:.\Generated_Source\PSoC5/rightEncTimer.c **** * Returns the compare value.
 481:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 482:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 483:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void:
 484:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 485:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 486:.\Generated_Source\PSoC5/rightEncTimer.c **** *  (uint16) Present compare value.
 487:.\Generated_Source\PSoC5/rightEncTimer.c **** *
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 21


 488:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 489:.\Generated_Source\PSoC5/rightEncTimer.c **** uint16 rightEncTimer_ReadCompare(void) 
 490:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 654              		.loc 1 490 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659 0000 80B4     		push	{r7}
 660              		.cfi_def_cfa_offset 4
 661              		.cfi_offset 7, -4
 662 0002 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 491:.\Generated_Source\PSoC5/rightEncTimer.c ****     return (CY_GET_REG16(rightEncTimer_COMPARE_LSB_PTR));
 664              		.loc 1 491 0
 665 0004 034B     		ldr	r3, .L51
 666 0006 1B88     		ldrh	r3, [r3]	@ movhi
 667 0008 9BB2     		uxth	r3, r3
 492:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 668              		.loc 1 492 0
 669 000a 1846     		mov	r0, r3
 670 000c BD46     		mov	sp, r7
 671              		.cfi_def_cfa_register 13
 672              		@ sp needed
 673 000e 5DF8047B 		ldr	r7, [sp], #4
 674              		.cfi_restore 7
 675              		.cfi_def_cfa_offset 0
 676 0012 7047     		bx	lr
 677              	.L52:
 678              		.align	2
 679              	.L51:
 680 0014 686A0040 		.word	1073769064
 681              		.cfi_endproc
 682              	.LFE14:
 683              		.size	rightEncTimer_ReadCompare, .-rightEncTimer_ReadCompare
 684              		.section	.text.rightEncTimer_ClearFIFO,"ax",%progbits
 685              		.align	2
 686              		.global	rightEncTimer_ClearFIFO
 687              		.thumb
 688              		.thumb_func
 689              		.type	rightEncTimer_ClearFIFO, %function
 690              	rightEncTimer_ClearFIFO:
 691              	.LFB15:
 493:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 494:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 495:.\Generated_Source\PSoC5/rightEncTimer.c **** #if (rightEncTimer_COMPARE_MODE_SOFTWARE)
 496:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_SetCompareMode
 498:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 500:.\Generated_Source\PSoC5/rightEncTimer.c **** *  Sets the software controlled Compare Mode.
 501:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 502:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:
 503:.\Generated_Source\PSoC5/rightEncTimer.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 505:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return:
 506:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 22


 507:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 508:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 509:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_SetCompareMode(uint8 compareMode) 
 510:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 511:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Clear the compare mode bits in the control register */
 512:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_CONTROL &= ((uint8)(~rightEncTimer_CTRL_CMPMODE_MASK));
 513:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 514:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Write the new setting */
 515:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_CONTROL |= compareMode;
 516:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 517:.\Generated_Source\PSoC5/rightEncTimer.c **** #endif  /* (rightEncTimer_COMPARE_MODE_SOFTWARE) */
 518:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 519:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 520:.\Generated_Source\PSoC5/rightEncTimer.c **** #if (rightEncTimer_CAPTURE_MODE_SOFTWARE)
 521:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 522:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_SetCaptureMode
 523:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 524:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 525:.\Generated_Source\PSoC5/rightEncTimer.c **** *  Sets the software controlled Capture Mode.
 526:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 527:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:
 528:.\Generated_Source\PSoC5/rightEncTimer.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 530:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return:
 531:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void
 532:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 533:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 534:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_SetCaptureMode(uint8 captureMode) 
 535:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 536:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Clear the capture mode bits in the control register */
 537:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_CONTROL &= ((uint8)(~rightEncTimer_CTRL_CAPMODE_MASK));
 538:.\Generated_Source\PSoC5/rightEncTimer.c ****     
 539:.\Generated_Source\PSoC5/rightEncTimer.c ****     /* Write the new setting */
 540:.\Generated_Source\PSoC5/rightEncTimer.c ****     rightEncTimer_CONTROL |= ((uint8)((uint8)captureMode << rightEncTimer_CTRL_CAPMODE0_SHIFT));
 541:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 542:.\Generated_Source\PSoC5/rightEncTimer.c **** #endif  /* (rightEncTimer_CAPTURE_MODE_SOFTWARE) */
 543:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 544:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 545:.\Generated_Source\PSoC5/rightEncTimer.c **** /*******************************************************************************
 546:.\Generated_Source\PSoC5/rightEncTimer.c **** * Function Name: rightEncTimer_ClearFIFO
 547:.\Generated_Source\PSoC5/rightEncTimer.c **** ********************************************************************************
 548:.\Generated_Source\PSoC5/rightEncTimer.c **** * Summary:
 549:.\Generated_Source\PSoC5/rightEncTimer.c **** *   This function clears all capture data from the capture FIFO
 550:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 551:.\Generated_Source\PSoC5/rightEncTimer.c **** * Parameters:  
 552:.\Generated_Source\PSoC5/rightEncTimer.c **** *  void:
 553:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 554:.\Generated_Source\PSoC5/rightEncTimer.c **** * Return: 
 555:.\Generated_Source\PSoC5/rightEncTimer.c **** *  None
 556:.\Generated_Source\PSoC5/rightEncTimer.c **** *
 557:.\Generated_Source\PSoC5/rightEncTimer.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC5/rightEncTimer.c **** void rightEncTimer_ClearFIFO(void) 
 559:.\Generated_Source\PSoC5/rightEncTimer.c **** {
 692              		.loc 1 559 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 23


 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 560:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 561:.\Generated_Source\PSoC5/rightEncTimer.c ****     while(0u != (rightEncTimer_ReadStatusRegister() & rightEncTimer_STATUS_FIFONEMP))
 702              		.loc 1 561 0
 703 0004 01E0     		b	.L54
 704              	.L55:
 562:.\Generated_Source\PSoC5/rightEncTimer.c ****     {
 563:.\Generated_Source\PSoC5/rightEncTimer.c ****         (void)rightEncTimer_ReadCapture();
 705              		.loc 1 563 0
 706 0006 FFF7FEFF 		bl	rightEncTimer_ReadCapture
 707              	.L54:
 561:.\Generated_Source\PSoC5/rightEncTimer.c ****     {
 708              		.loc 1 561 0
 709 000a FFF7FEFF 		bl	rightEncTimer_ReadStatusRegister
 710 000e 0346     		mov	r3, r0
 711 0010 03F04003 		and	r3, r3, #64
 712 0014 002B     		cmp	r3, #0
 713 0016 F6D1     		bne	.L55
 564:.\Generated_Source\PSoC5/rightEncTimer.c ****     }
 565:.\Generated_Source\PSoC5/rightEncTimer.c **** 
 566:.\Generated_Source\PSoC5/rightEncTimer.c **** }
 714              		.loc 1 566 0
 715 0018 80BD     		pop	{r7, pc}
 716              		.cfi_endproc
 717              	.LFE15:
 718              		.size	rightEncTimer_ClearFIFO, .-rightEncTimer_ClearFIFO
 719 001a 00BF     		.text
 720              	.Letext0:
 721              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 722              		.section	.debug_info,"",%progbits
 723              	.Ldebug_info0:
 724 0000 86020000 		.4byte	0x286
 725 0004 0400     		.2byte	0x4
 726 0006 00000000 		.4byte	.Ldebug_abbrev0
 727 000a 04       		.byte	0x4
 728 000b 01       		.uleb128 0x1
 729 000c 86020000 		.4byte	.LASF40
 730 0010 01       		.byte	0x1
 731 0011 50030000 		.4byte	.LASF41
 732 0015 1B000000 		.4byte	.LASF42
 733 0019 00000000 		.4byte	.Ldebug_ranges0+0
 734 001d 00000000 		.4byte	0
 735 0021 00000000 		.4byte	.Ldebug_line0
 736 0025 02       		.uleb128 0x2
 737 0026 01       		.byte	0x1
 738 0027 06       		.byte	0x6
 739 0028 98030000 		.4byte	.LASF0
 740 002c 02       		.uleb128 0x2
 741 002d 01       		.byte	0x1
 742 002e 08       		.byte	0x8
 743 002f 5F010000 		.4byte	.LASF1
 744 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 24


 745 0034 02       		.byte	0x2
 746 0035 05       		.byte	0x5
 747 0036 2E030000 		.4byte	.LASF2
 748 003a 02       		.uleb128 0x2
 749 003b 02       		.byte	0x2
 750 003c 07       		.byte	0x7
 751 003d A6000000 		.4byte	.LASF3
 752 0041 02       		.uleb128 0x2
 753 0042 04       		.byte	0x4
 754 0043 05       		.byte	0x5
 755 0044 79030000 		.4byte	.LASF4
 756 0048 02       		.uleb128 0x2
 757 0049 04       		.byte	0x4
 758 004a 07       		.byte	0x7
 759 004b 30010000 		.4byte	.LASF5
 760 004f 02       		.uleb128 0x2
 761 0050 08       		.byte	0x8
 762 0051 05       		.byte	0x5
 763 0052 73020000 		.4byte	.LASF6
 764 0056 02       		.uleb128 0x2
 765 0057 08       		.byte	0x8
 766 0058 07       		.byte	0x7
 767 0059 FC010000 		.4byte	.LASF7
 768 005d 03       		.uleb128 0x3
 769 005e 04       		.byte	0x4
 770 005f 05       		.byte	0x5
 771 0060 696E7400 		.ascii	"int\000"
 772 0064 02       		.uleb128 0x2
 773 0065 04       		.byte	0x4
 774 0066 07       		.byte	0x7
 775 0067 EF010000 		.4byte	.LASF8
 776 006b 04       		.uleb128 0x4
 777 006c 42010000 		.4byte	.LASF9
 778 0070 02       		.byte	0x2
 779 0071 9201     		.2byte	0x192
 780 0073 2C000000 		.4byte	0x2c
 781 0077 04       		.uleb128 0x4
 782 0078 C9010000 		.4byte	.LASF10
 783 007c 02       		.byte	0x2
 784 007d 9301     		.2byte	0x193
 785 007f 3A000000 		.4byte	0x3a
 786 0083 02       		.uleb128 0x2
 787 0084 04       		.byte	0x4
 788 0085 04       		.byte	0x4
 789 0086 F0000000 		.4byte	.LASF11
 790 008a 02       		.uleb128 0x2
 791 008b 08       		.byte	0x8
 792 008c 04       		.byte	0x4
 793 008d A9010000 		.4byte	.LASF12
 794 0091 02       		.uleb128 0x2
 795 0092 01       		.byte	0x1
 796 0093 08       		.byte	0x8
 797 0094 81020000 		.4byte	.LASF13
 798 0098 04       		.uleb128 0x4
 799 0099 2B010000 		.4byte	.LASF14
 800 009d 02       		.byte	0x2
 801 009e 3C02     		.2byte	0x23c
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 25


 802 00a0 A4000000 		.4byte	0xa4
 803 00a4 05       		.uleb128 0x5
 804 00a5 6B000000 		.4byte	0x6b
 805 00a9 04       		.uleb128 0x4
 806 00aa 00000000 		.4byte	.LASF15
 807 00ae 02       		.byte	0x2
 808 00af 3D02     		.2byte	0x23d
 809 00b1 B5000000 		.4byte	0xb5
 810 00b5 05       		.uleb128 0x5
 811 00b6 77000000 		.4byte	0x77
 812 00ba 02       		.uleb128 0x2
 813 00bb 04       		.byte	0x4
 814 00bc 07       		.byte	0x7
 815 00bd 4D020000 		.4byte	.LASF16
 816 00c1 06       		.uleb128 0x6
 817 00c2 18010000 		.4byte	.LASF22
 818 00c6 01       		.byte	0x1
 819 00c7 25       		.byte	0x25
 820 00c8 00000000 		.4byte	.LFB0
 821 00cc 80000000 		.4byte	.LFE0-.LFB0
 822 00d0 01       		.uleb128 0x1
 823 00d1 9C       		.byte	0x9c
 824 00d2 F3000000 		.4byte	0xf3
 825 00d6 07       		.uleb128 0x7
 826 00d7 48020000 		.4byte	.LASF17
 827 00db 01       		.byte	0x1
 828 00dc 28       		.byte	0x28
 829 00dd 6B000000 		.4byte	0x6b
 830 00e1 02       		.uleb128 0x2
 831 00e2 91       		.byte	0x91
 832 00e3 77       		.sleb128 -9
 833 00e4 07       		.uleb128 0x7
 834 00e5 56020000 		.4byte	.LASF18
 835 00e9 01       		.byte	0x1
 836 00ea 2D       		.byte	0x2d
 837 00eb 6B000000 		.4byte	0x6b
 838 00ef 02       		.uleb128 0x2
 839 00f0 91       		.byte	0x91
 840 00f1 76       		.sleb128 -10
 841 00f2 00       		.byte	0
 842 00f3 08       		.uleb128 0x8
 843 00f4 06000000 		.4byte	.LASF19
 844 00f8 01       		.byte	0x1
 845 00f9 8F       		.byte	0x8f
 846 00fa 00000000 		.4byte	.LFB1
 847 00fe 20000000 		.4byte	.LFE1-.LFB1
 848 0102 01       		.uleb128 0x1
 849 0103 9C       		.byte	0x9c
 850 0104 09       		.uleb128 0x9
 851 0105 DC000000 		.4byte	.LASF20
 852 0109 01       		.byte	0x1
 853 010a B2       		.byte	0xb2
 854 010b 00000000 		.4byte	.LFB2
 855 010f 20000000 		.4byte	.LFE2-.LFB2
 856 0113 01       		.uleb128 0x1
 857 0114 9C       		.byte	0x9c
 858 0115 08       		.uleb128 0x8
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 26


 859 0116 35020000 		.4byte	.LASF21
 860 011a 01       		.byte	0x1
 861 011b D0       		.byte	0xd0
 862 011c 00000000 		.4byte	.LFB3
 863 0120 20000000 		.4byte	.LFE3-.LFB3
 864 0124 01       		.uleb128 0x1
 865 0125 9C       		.byte	0x9c
 866 0126 0A       		.uleb128 0xa
 867 0127 D0010000 		.4byte	.LASF23
 868 012b 01       		.byte	0x1
 869 012c ED       		.byte	0xed
 870 012d 00000000 		.4byte	.LFB4
 871 0131 20000000 		.4byte	.LFE4-.LFB4
 872 0135 01       		.uleb128 0x1
 873 0136 9C       		.byte	0x9c
 874 0137 4A010000 		.4byte	0x14a
 875 013b 0B       		.uleb128 0xb
 876 013c 50010000 		.4byte	.LASF27
 877 0140 01       		.byte	0x1
 878 0141 ED       		.byte	0xed
 879 0142 6B000000 		.4byte	0x6b
 880 0146 02       		.uleb128 0x2
 881 0147 91       		.byte	0x91
 882 0148 77       		.sleb128 -9
 883 0149 00       		.byte	0
 884 014a 0C       		.uleb128 0xc
 885 014b 6D010000 		.4byte	.LASF24
 886 014f 01       		.byte	0x1
 887 0150 0501     		.2byte	0x105
 888 0152 6B000000 		.4byte	0x6b
 889 0156 00000000 		.4byte	.LFB5
 890 015a 18000000 		.4byte	.LFE5-.LFB5
 891 015e 01       		.uleb128 0x1
 892 015f 9C       		.byte	0x9c
 893 0160 0C       		.uleb128 0xc
 894 0161 13020000 		.4byte	.LASF25
 895 0165 01       		.byte	0x1
 896 0166 1B01     		.2byte	0x11b
 897 0168 6B000000 		.4byte	0x6b
 898 016c 00000000 		.4byte	.LFB6
 899 0170 18000000 		.4byte	.LFE6-.LFB6
 900 0174 01       		.uleb128 0x1
 901 0175 9C       		.byte	0x9c
 902 0176 0D       		.uleb128 0xd
 903 0177 B9000000 		.4byte	.LASF26
 904 017b 01       		.byte	0x1
 905 017c 3001     		.2byte	0x130
 906 017e 00000000 		.4byte	.LFB7
 907 0182 20000000 		.4byte	.LFE7-.LFB7
 908 0186 01       		.uleb128 0x1
 909 0187 9C       		.byte	0x9c
 910 0188 9C010000 		.4byte	0x19c
 911 018c 0E       		.uleb128 0xe
 912 018d 48010000 		.4byte	.LASF28
 913 0191 01       		.byte	0x1
 914 0192 3001     		.2byte	0x130
 915 0194 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 27


 916 0198 02       		.uleb128 0x2
 917 0199 91       		.byte	0x91
 918 019a 77       		.sleb128 -9
 919 019b 00       		.byte	0
 920 019c 0D       		.uleb128 0xd
 921 019d 8E010000 		.4byte	.LASF29
 922 01a1 01       		.byte	0x1
 923 01a2 4601     		.2byte	0x146
 924 01a4 00000000 		.4byte	.LFB8
 925 01a8 20000000 		.4byte	.LFE8-.LFB8
 926 01ac 01       		.uleb128 0x1
 927 01ad 9C       		.byte	0x9c
 928 01ae C2010000 		.4byte	0x1c2
 929 01b2 0E       		.uleb128 0xe
 930 01b3 F6000000 		.4byte	.LASF30
 931 01b7 01       		.byte	0x1
 932 01b8 4601     		.2byte	0x146
 933 01ba 77000000 		.4byte	0x77
 934 01be 02       		.uleb128 0x2
 935 01bf 91       		.byte	0x91
 936 01c0 76       		.sleb128 -10
 937 01c1 00       		.byte	0
 938 01c2 0C       		.uleb128 0xc
 939 01c3 85000000 		.4byte	.LASF31
 940 01c7 01       		.byte	0x1
 941 01c8 6501     		.2byte	0x165
 942 01ca 77000000 		.4byte	0x77
 943 01ce 00000000 		.4byte	.LFB9
 944 01d2 20000000 		.4byte	.LFE9-.LFB9
 945 01d6 01       		.uleb128 0x1
 946 01d7 9C       		.byte	0x9c
 947 01d8 0C       		.uleb128 0xc
 948 01d9 AC030000 		.4byte	.LASF32
 949 01dd 01       		.byte	0x1
 950 01de 8601     		.2byte	0x186
 951 01e0 77000000 		.4byte	0x77
 952 01e4 00000000 		.4byte	.LFB10
 953 01e8 18000000 		.4byte	.LFE10-.LFB10
 954 01ec 01       		.uleb128 0x1
 955 01ed 9C       		.byte	0x9c
 956 01ee 0D       		.uleb128 0xd
 957 01ef FE000000 		.4byte	.LASF33
 958 01f3 01       		.byte	0x1
 959 01f4 9F01     		.2byte	0x19f
 960 01f6 00000000 		.4byte	.LFB11
 961 01fa 20000000 		.4byte	.LFE11-.LFB11
 962 01fe 01       		.uleb128 0x1
 963 01ff 9C       		.byte	0x9c
 964 0200 14020000 		.4byte	0x214
 965 0204 0E       		.uleb128 0xe
 966 0205 9F000000 		.4byte	.LASF34
 967 0209 01       		.byte	0x1
 968 020a 9F01     		.2byte	0x19f
 969 020c 77000000 		.4byte	0x77
 970 0210 02       		.uleb128 0x2
 971 0211 91       		.byte	0x91
 972 0212 76       		.sleb128 -10
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 28


 973 0213 00       		.byte	0
 974 0214 0C       		.uleb128 0xc
 975 0215 B0010000 		.4byte	.LASF35
 976 0219 01       		.byte	0x1
 977 021a B601     		.2byte	0x1b6
 978 021c 77000000 		.4byte	0x77
 979 0220 00000000 		.4byte	.LFB12
 980 0224 18000000 		.4byte	.LFE12-.LFB12
 981 0228 01       		.uleb128 0x1
 982 0229 9C       		.byte	0x9c
 983 022a 0D       		.uleb128 0xd
 984 022b 6A000000 		.4byte	.LASF36
 985 022f 01       		.byte	0x1
 986 0230 D101     		.2byte	0x1d1
 987 0232 00000000 		.4byte	.LFB13
 988 0236 20000000 		.4byte	.LFE13-.LFB13
 989 023a 01       		.uleb128 0x1
 990 023b 9C       		.byte	0x9c
 991 023c 50020000 		.4byte	0x250
 992 0240 0E       		.uleb128 0xe
 993 0241 A4030000 		.4byte	.LASF37
 994 0245 01       		.byte	0x1
 995 0246 D101     		.2byte	0x1d1
 996 0248 77000000 		.4byte	0x77
 997 024c 02       		.uleb128 0x2
 998 024d 91       		.byte	0x91
 999 024e 76       		.sleb128 -10
 1000 024f 00       		.byte	0
 1001 0250 0C       		.uleb128 0xc
 1002 0251 14030000 		.4byte	.LASF38
 1003 0255 01       		.byte	0x1
 1004 0256 E901     		.2byte	0x1e9
 1005 0258 77000000 		.4byte	0x77
 1006 025c 00000000 		.4byte	.LFB14
 1007 0260 18000000 		.4byte	.LFE14-.LFB14
 1008 0264 01       		.uleb128 0x1
 1009 0265 9C       		.byte	0x9c
 1010 0266 0F       		.uleb128 0xf
 1011 0267 38030000 		.4byte	.LASF39
 1012 026b 01       		.byte	0x1
 1013 026c 2E02     		.2byte	0x22e
 1014 026e 00000000 		.4byte	.LFB15
 1015 0272 1A000000 		.4byte	.LFE15-.LFB15
 1016 0276 01       		.uleb128 0x1
 1017 0277 9C       		.byte	0x9c
 1018 0278 10       		.uleb128 0x10
 1019 0279 82030000 		.4byte	.LASF43
 1020 027d 01       		.byte	0x1
 1021 027e 15       		.byte	0x15
 1022 027f 6B000000 		.4byte	0x6b
 1023 0283 05       		.uleb128 0x5
 1024 0284 03       		.byte	0x3
 1025 0285 00000000 		.4byte	rightEncTimer_initVar
 1026 0289 00       		.byte	0
 1027              		.section	.debug_abbrev,"",%progbits
 1028              	.Ldebug_abbrev0:
 1029 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 29


 1030 0001 11       		.uleb128 0x11
 1031 0002 01       		.byte	0x1
 1032 0003 25       		.uleb128 0x25
 1033 0004 0E       		.uleb128 0xe
 1034 0005 13       		.uleb128 0x13
 1035 0006 0B       		.uleb128 0xb
 1036 0007 03       		.uleb128 0x3
 1037 0008 0E       		.uleb128 0xe
 1038 0009 1B       		.uleb128 0x1b
 1039 000a 0E       		.uleb128 0xe
 1040 000b 55       		.uleb128 0x55
 1041 000c 17       		.uleb128 0x17
 1042 000d 11       		.uleb128 0x11
 1043 000e 01       		.uleb128 0x1
 1044 000f 10       		.uleb128 0x10
 1045 0010 17       		.uleb128 0x17
 1046 0011 00       		.byte	0
 1047 0012 00       		.byte	0
 1048 0013 02       		.uleb128 0x2
 1049 0014 24       		.uleb128 0x24
 1050 0015 00       		.byte	0
 1051 0016 0B       		.uleb128 0xb
 1052 0017 0B       		.uleb128 0xb
 1053 0018 3E       		.uleb128 0x3e
 1054 0019 0B       		.uleb128 0xb
 1055 001a 03       		.uleb128 0x3
 1056 001b 0E       		.uleb128 0xe
 1057 001c 00       		.byte	0
 1058 001d 00       		.byte	0
 1059 001e 03       		.uleb128 0x3
 1060 001f 24       		.uleb128 0x24
 1061 0020 00       		.byte	0
 1062 0021 0B       		.uleb128 0xb
 1063 0022 0B       		.uleb128 0xb
 1064 0023 3E       		.uleb128 0x3e
 1065 0024 0B       		.uleb128 0xb
 1066 0025 03       		.uleb128 0x3
 1067 0026 08       		.uleb128 0x8
 1068 0027 00       		.byte	0
 1069 0028 00       		.byte	0
 1070 0029 04       		.uleb128 0x4
 1071 002a 16       		.uleb128 0x16
 1072 002b 00       		.byte	0
 1073 002c 03       		.uleb128 0x3
 1074 002d 0E       		.uleb128 0xe
 1075 002e 3A       		.uleb128 0x3a
 1076 002f 0B       		.uleb128 0xb
 1077 0030 3B       		.uleb128 0x3b
 1078 0031 05       		.uleb128 0x5
 1079 0032 49       		.uleb128 0x49
 1080 0033 13       		.uleb128 0x13
 1081 0034 00       		.byte	0
 1082 0035 00       		.byte	0
 1083 0036 05       		.uleb128 0x5
 1084 0037 35       		.uleb128 0x35
 1085 0038 00       		.byte	0
 1086 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 30


 1087 003a 13       		.uleb128 0x13
 1088 003b 00       		.byte	0
 1089 003c 00       		.byte	0
 1090 003d 06       		.uleb128 0x6
 1091 003e 2E       		.uleb128 0x2e
 1092 003f 01       		.byte	0x1
 1093 0040 3F       		.uleb128 0x3f
 1094 0041 19       		.uleb128 0x19
 1095 0042 03       		.uleb128 0x3
 1096 0043 0E       		.uleb128 0xe
 1097 0044 3A       		.uleb128 0x3a
 1098 0045 0B       		.uleb128 0xb
 1099 0046 3B       		.uleb128 0x3b
 1100 0047 0B       		.uleb128 0xb
 1101 0048 27       		.uleb128 0x27
 1102 0049 19       		.uleb128 0x19
 1103 004a 11       		.uleb128 0x11
 1104 004b 01       		.uleb128 0x1
 1105 004c 12       		.uleb128 0x12
 1106 004d 06       		.uleb128 0x6
 1107 004e 40       		.uleb128 0x40
 1108 004f 18       		.uleb128 0x18
 1109 0050 9642     		.uleb128 0x2116
 1110 0052 19       		.uleb128 0x19
 1111 0053 01       		.uleb128 0x1
 1112 0054 13       		.uleb128 0x13
 1113 0055 00       		.byte	0
 1114 0056 00       		.byte	0
 1115 0057 07       		.uleb128 0x7
 1116 0058 34       		.uleb128 0x34
 1117 0059 00       		.byte	0
 1118 005a 03       		.uleb128 0x3
 1119 005b 0E       		.uleb128 0xe
 1120 005c 3A       		.uleb128 0x3a
 1121 005d 0B       		.uleb128 0xb
 1122 005e 3B       		.uleb128 0x3b
 1123 005f 0B       		.uleb128 0xb
 1124 0060 49       		.uleb128 0x49
 1125 0061 13       		.uleb128 0x13
 1126 0062 02       		.uleb128 0x2
 1127 0063 18       		.uleb128 0x18
 1128 0064 00       		.byte	0
 1129 0065 00       		.byte	0
 1130 0066 08       		.uleb128 0x8
 1131 0067 2E       		.uleb128 0x2e
 1132 0068 00       		.byte	0
 1133 0069 3F       		.uleb128 0x3f
 1134 006a 19       		.uleb128 0x19
 1135 006b 03       		.uleb128 0x3
 1136 006c 0E       		.uleb128 0xe
 1137 006d 3A       		.uleb128 0x3a
 1138 006e 0B       		.uleb128 0xb
 1139 006f 3B       		.uleb128 0x3b
 1140 0070 0B       		.uleb128 0xb
 1141 0071 27       		.uleb128 0x27
 1142 0072 19       		.uleb128 0x19
 1143 0073 11       		.uleb128 0x11
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 31


 1144 0074 01       		.uleb128 0x1
 1145 0075 12       		.uleb128 0x12
 1146 0076 06       		.uleb128 0x6
 1147 0077 40       		.uleb128 0x40
 1148 0078 18       		.uleb128 0x18
 1149 0079 9742     		.uleb128 0x2117
 1150 007b 19       		.uleb128 0x19
 1151 007c 00       		.byte	0
 1152 007d 00       		.byte	0
 1153 007e 09       		.uleb128 0x9
 1154 007f 2E       		.uleb128 0x2e
 1155 0080 00       		.byte	0
 1156 0081 3F       		.uleb128 0x3f
 1157 0082 19       		.uleb128 0x19
 1158 0083 03       		.uleb128 0x3
 1159 0084 0E       		.uleb128 0xe
 1160 0085 3A       		.uleb128 0x3a
 1161 0086 0B       		.uleb128 0xb
 1162 0087 3B       		.uleb128 0x3b
 1163 0088 0B       		.uleb128 0xb
 1164 0089 27       		.uleb128 0x27
 1165 008a 19       		.uleb128 0x19
 1166 008b 11       		.uleb128 0x11
 1167 008c 01       		.uleb128 0x1
 1168 008d 12       		.uleb128 0x12
 1169 008e 06       		.uleb128 0x6
 1170 008f 40       		.uleb128 0x40
 1171 0090 18       		.uleb128 0x18
 1172 0091 9642     		.uleb128 0x2116
 1173 0093 19       		.uleb128 0x19
 1174 0094 00       		.byte	0
 1175 0095 00       		.byte	0
 1176 0096 0A       		.uleb128 0xa
 1177 0097 2E       		.uleb128 0x2e
 1178 0098 01       		.byte	0x1
 1179 0099 3F       		.uleb128 0x3f
 1180 009a 19       		.uleb128 0x19
 1181 009b 03       		.uleb128 0x3
 1182 009c 0E       		.uleb128 0xe
 1183 009d 3A       		.uleb128 0x3a
 1184 009e 0B       		.uleb128 0xb
 1185 009f 3B       		.uleb128 0x3b
 1186 00a0 0B       		.uleb128 0xb
 1187 00a1 27       		.uleb128 0x27
 1188 00a2 19       		.uleb128 0x19
 1189 00a3 11       		.uleb128 0x11
 1190 00a4 01       		.uleb128 0x1
 1191 00a5 12       		.uleb128 0x12
 1192 00a6 06       		.uleb128 0x6
 1193 00a7 40       		.uleb128 0x40
 1194 00a8 18       		.uleb128 0x18
 1195 00a9 9742     		.uleb128 0x2117
 1196 00ab 19       		.uleb128 0x19
 1197 00ac 01       		.uleb128 0x1
 1198 00ad 13       		.uleb128 0x13
 1199 00ae 00       		.byte	0
 1200 00af 00       		.byte	0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 32


 1201 00b0 0B       		.uleb128 0xb
 1202 00b1 05       		.uleb128 0x5
 1203 00b2 00       		.byte	0
 1204 00b3 03       		.uleb128 0x3
 1205 00b4 0E       		.uleb128 0xe
 1206 00b5 3A       		.uleb128 0x3a
 1207 00b6 0B       		.uleb128 0xb
 1208 00b7 3B       		.uleb128 0x3b
 1209 00b8 0B       		.uleb128 0xb
 1210 00b9 49       		.uleb128 0x49
 1211 00ba 13       		.uleb128 0x13
 1212 00bb 02       		.uleb128 0x2
 1213 00bc 18       		.uleb128 0x18
 1214 00bd 00       		.byte	0
 1215 00be 00       		.byte	0
 1216 00bf 0C       		.uleb128 0xc
 1217 00c0 2E       		.uleb128 0x2e
 1218 00c1 00       		.byte	0
 1219 00c2 3F       		.uleb128 0x3f
 1220 00c3 19       		.uleb128 0x19
 1221 00c4 03       		.uleb128 0x3
 1222 00c5 0E       		.uleb128 0xe
 1223 00c6 3A       		.uleb128 0x3a
 1224 00c7 0B       		.uleb128 0xb
 1225 00c8 3B       		.uleb128 0x3b
 1226 00c9 05       		.uleb128 0x5
 1227 00ca 27       		.uleb128 0x27
 1228 00cb 19       		.uleb128 0x19
 1229 00cc 49       		.uleb128 0x49
 1230 00cd 13       		.uleb128 0x13
 1231 00ce 11       		.uleb128 0x11
 1232 00cf 01       		.uleb128 0x1
 1233 00d0 12       		.uleb128 0x12
 1234 00d1 06       		.uleb128 0x6
 1235 00d2 40       		.uleb128 0x40
 1236 00d3 18       		.uleb128 0x18
 1237 00d4 9742     		.uleb128 0x2117
 1238 00d6 19       		.uleb128 0x19
 1239 00d7 00       		.byte	0
 1240 00d8 00       		.byte	0
 1241 00d9 0D       		.uleb128 0xd
 1242 00da 2E       		.uleb128 0x2e
 1243 00db 01       		.byte	0x1
 1244 00dc 3F       		.uleb128 0x3f
 1245 00dd 19       		.uleb128 0x19
 1246 00de 03       		.uleb128 0x3
 1247 00df 0E       		.uleb128 0xe
 1248 00e0 3A       		.uleb128 0x3a
 1249 00e1 0B       		.uleb128 0xb
 1250 00e2 3B       		.uleb128 0x3b
 1251 00e3 05       		.uleb128 0x5
 1252 00e4 27       		.uleb128 0x27
 1253 00e5 19       		.uleb128 0x19
 1254 00e6 11       		.uleb128 0x11
 1255 00e7 01       		.uleb128 0x1
 1256 00e8 12       		.uleb128 0x12
 1257 00e9 06       		.uleb128 0x6
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 33


 1258 00ea 40       		.uleb128 0x40
 1259 00eb 18       		.uleb128 0x18
 1260 00ec 9742     		.uleb128 0x2117
 1261 00ee 19       		.uleb128 0x19
 1262 00ef 01       		.uleb128 0x1
 1263 00f0 13       		.uleb128 0x13
 1264 00f1 00       		.byte	0
 1265 00f2 00       		.byte	0
 1266 00f3 0E       		.uleb128 0xe
 1267 00f4 05       		.uleb128 0x5
 1268 00f5 00       		.byte	0
 1269 00f6 03       		.uleb128 0x3
 1270 00f7 0E       		.uleb128 0xe
 1271 00f8 3A       		.uleb128 0x3a
 1272 00f9 0B       		.uleb128 0xb
 1273 00fa 3B       		.uleb128 0x3b
 1274 00fb 05       		.uleb128 0x5
 1275 00fc 49       		.uleb128 0x49
 1276 00fd 13       		.uleb128 0x13
 1277 00fe 02       		.uleb128 0x2
 1278 00ff 18       		.uleb128 0x18
 1279 0100 00       		.byte	0
 1280 0101 00       		.byte	0
 1281 0102 0F       		.uleb128 0xf
 1282 0103 2E       		.uleb128 0x2e
 1283 0104 00       		.byte	0
 1284 0105 3F       		.uleb128 0x3f
 1285 0106 19       		.uleb128 0x19
 1286 0107 03       		.uleb128 0x3
 1287 0108 0E       		.uleb128 0xe
 1288 0109 3A       		.uleb128 0x3a
 1289 010a 0B       		.uleb128 0xb
 1290 010b 3B       		.uleb128 0x3b
 1291 010c 05       		.uleb128 0x5
 1292 010d 27       		.uleb128 0x27
 1293 010e 19       		.uleb128 0x19
 1294 010f 11       		.uleb128 0x11
 1295 0110 01       		.uleb128 0x1
 1296 0111 12       		.uleb128 0x12
 1297 0112 06       		.uleb128 0x6
 1298 0113 40       		.uleb128 0x40
 1299 0114 18       		.uleb128 0x18
 1300 0115 9642     		.uleb128 0x2116
 1301 0117 19       		.uleb128 0x19
 1302 0118 00       		.byte	0
 1303 0119 00       		.byte	0
 1304 011a 10       		.uleb128 0x10
 1305 011b 34       		.uleb128 0x34
 1306 011c 00       		.byte	0
 1307 011d 03       		.uleb128 0x3
 1308 011e 0E       		.uleb128 0xe
 1309 011f 3A       		.uleb128 0x3a
 1310 0120 0B       		.uleb128 0xb
 1311 0121 3B       		.uleb128 0x3b
 1312 0122 0B       		.uleb128 0xb
 1313 0123 49       		.uleb128 0x49
 1314 0124 13       		.uleb128 0x13
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 34


 1315 0125 3F       		.uleb128 0x3f
 1316 0126 19       		.uleb128 0x19
 1317 0127 02       		.uleb128 0x2
 1318 0128 18       		.uleb128 0x18
 1319 0129 00       		.byte	0
 1320 012a 00       		.byte	0
 1321 012b 00       		.byte	0
 1322              		.section	.debug_aranges,"",%progbits
 1323 0000 94000000 		.4byte	0x94
 1324 0004 0200     		.2byte	0x2
 1325 0006 00000000 		.4byte	.Ldebug_info0
 1326 000a 04       		.byte	0x4
 1327 000b 00       		.byte	0
 1328 000c 0000     		.2byte	0
 1329 000e 0000     		.2byte	0
 1330 0010 00000000 		.4byte	.LFB0
 1331 0014 80000000 		.4byte	.LFE0-.LFB0
 1332 0018 00000000 		.4byte	.LFB1
 1333 001c 20000000 		.4byte	.LFE1-.LFB1
 1334 0020 00000000 		.4byte	.LFB2
 1335 0024 20000000 		.4byte	.LFE2-.LFB2
 1336 0028 00000000 		.4byte	.LFB3
 1337 002c 20000000 		.4byte	.LFE3-.LFB3
 1338 0030 00000000 		.4byte	.LFB4
 1339 0034 20000000 		.4byte	.LFE4-.LFB4
 1340 0038 00000000 		.4byte	.LFB5
 1341 003c 18000000 		.4byte	.LFE5-.LFB5
 1342 0040 00000000 		.4byte	.LFB6
 1343 0044 18000000 		.4byte	.LFE6-.LFB6
 1344 0048 00000000 		.4byte	.LFB7
 1345 004c 20000000 		.4byte	.LFE7-.LFB7
 1346 0050 00000000 		.4byte	.LFB8
 1347 0054 20000000 		.4byte	.LFE8-.LFB8
 1348 0058 00000000 		.4byte	.LFB9
 1349 005c 20000000 		.4byte	.LFE9-.LFB9
 1350 0060 00000000 		.4byte	.LFB10
 1351 0064 18000000 		.4byte	.LFE10-.LFB10
 1352 0068 00000000 		.4byte	.LFB11
 1353 006c 20000000 		.4byte	.LFE11-.LFB11
 1354 0070 00000000 		.4byte	.LFB12
 1355 0074 18000000 		.4byte	.LFE12-.LFB12
 1356 0078 00000000 		.4byte	.LFB13
 1357 007c 20000000 		.4byte	.LFE13-.LFB13
 1358 0080 00000000 		.4byte	.LFB14
 1359 0084 18000000 		.4byte	.LFE14-.LFB14
 1360 0088 00000000 		.4byte	.LFB15
 1361 008c 1A000000 		.4byte	.LFE15-.LFB15
 1362 0090 00000000 		.4byte	0
 1363 0094 00000000 		.4byte	0
 1364              		.section	.debug_ranges,"",%progbits
 1365              	.Ldebug_ranges0:
 1366 0000 00000000 		.4byte	.LFB0
 1367 0004 80000000 		.4byte	.LFE0
 1368 0008 00000000 		.4byte	.LFB1
 1369 000c 20000000 		.4byte	.LFE1
 1370 0010 00000000 		.4byte	.LFB2
 1371 0014 20000000 		.4byte	.LFE2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 35


 1372 0018 00000000 		.4byte	.LFB3
 1373 001c 20000000 		.4byte	.LFE3
 1374 0020 00000000 		.4byte	.LFB4
 1375 0024 20000000 		.4byte	.LFE4
 1376 0028 00000000 		.4byte	.LFB5
 1377 002c 18000000 		.4byte	.LFE5
 1378 0030 00000000 		.4byte	.LFB6
 1379 0034 18000000 		.4byte	.LFE6
 1380 0038 00000000 		.4byte	.LFB7
 1381 003c 20000000 		.4byte	.LFE7
 1382 0040 00000000 		.4byte	.LFB8
 1383 0044 20000000 		.4byte	.LFE8
 1384 0048 00000000 		.4byte	.LFB9
 1385 004c 20000000 		.4byte	.LFE9
 1386 0050 00000000 		.4byte	.LFB10
 1387 0054 18000000 		.4byte	.LFE10
 1388 0058 00000000 		.4byte	.LFB11
 1389 005c 20000000 		.4byte	.LFE11
 1390 0060 00000000 		.4byte	.LFB12
 1391 0064 18000000 		.4byte	.LFE12
 1392 0068 00000000 		.4byte	.LFB13
 1393 006c 20000000 		.4byte	.LFE13
 1394 0070 00000000 		.4byte	.LFB14
 1395 0074 18000000 		.4byte	.LFE14
 1396 0078 00000000 		.4byte	.LFB15
 1397 007c 1A000000 		.4byte	.LFE15
 1398 0080 00000000 		.4byte	0
 1399 0084 00000000 		.4byte	0
 1400              		.section	.debug_line,"",%progbits
 1401              	.Ldebug_line0:
 1402 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1402      02004C00 
 1402      00000201 
 1402      FB0E0D00 
 1402      01010101 
 1403              	.LASF15:
 1404 0000 72656731 		.ascii	"reg16\000"
 1404      3600
 1405              	.LASF19:
 1406 0006 72696768 		.ascii	"rightEncTimer_Enable\000"
 1406      74456E63 
 1406      54696D65 
 1406      725F456E 
 1406      61626C65 
 1407              	.LASF42:
 1408 001b 433A5C55 		.ascii	"C:\\Users\\Patrick\\Documents\\GitHub\\PSoC 5LP FIl"
 1408      73657273 
 1408      5C506174 
 1408      7269636B 
 1408      5C446F63 
 1409 0049 65735C43 		.ascii	"es\\C-CAN_PSoC_DevKit\\C-CAN.cydsn\000"
 1409      2D43414E 
 1409      5F50536F 
 1409      435F4465 
 1409      764B6974 
 1410              	.LASF36:
 1411 006a 72696768 		.ascii	"rightEncTimer_WriteCompare\000"
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 36


 1411      74456E63 
 1411      54696D65 
 1411      725F5772 
 1411      69746543 
 1412              	.LASF31:
 1413 0085 72696768 		.ascii	"rightEncTimer_ReadCounter\000"
 1413      74456E63 
 1413      54696D65 
 1413      725F5265 
 1413      6164436F 
 1414              	.LASF34:
 1415 009f 70657269 		.ascii	"period\000"
 1415      6F6400
 1416              	.LASF3:
 1417 00a6 73686F72 		.ascii	"short unsigned int\000"
 1417      7420756E 
 1417      7369676E 
 1417      65642069 
 1417      6E7400
 1418              	.LASF26:
 1419 00b9 72696768 		.ascii	"rightEncTimer_WriteControlRegister\000"
 1419      74456E63 
 1419      54696D65 
 1419      725F5772 
 1419      69746543 
 1420              	.LASF20:
 1421 00dc 72696768 		.ascii	"rightEncTimer_Start\000"
 1421      74456E63 
 1421      54696D65 
 1421      725F5374 
 1421      61727400 
 1422              	.LASF11:
 1423 00f0 666C6F61 		.ascii	"float\000"
 1423      7400
 1424              	.LASF30:
 1425 00f6 636F756E 		.ascii	"counter\000"
 1425      74657200 
 1426              	.LASF33:
 1427 00fe 72696768 		.ascii	"rightEncTimer_WritePeriod\000"
 1427      74456E63 
 1427      54696D65 
 1427      725F5772 
 1427      69746550 
 1428              	.LASF22:
 1429 0118 72696768 		.ascii	"rightEncTimer_Init\000"
 1429      74456E63 
 1429      54696D65 
 1429      725F496E 
 1429      697400
 1430              	.LASF14:
 1431 012b 72656738 		.ascii	"reg8\000"
 1431      00
 1432              	.LASF5:
 1433 0130 6C6F6E67 		.ascii	"long unsigned int\000"
 1433      20756E73 
 1433      69676E65 
 1433      6420696E 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 37


 1433      7400
 1434              	.LASF9:
 1435 0142 75696E74 		.ascii	"uint8\000"
 1435      3800
 1436              	.LASF28:
 1437 0148 636F6E74 		.ascii	"control\000"
 1437      726F6C00 
 1438              	.LASF27:
 1439 0150 696E7465 		.ascii	"interruptsMask\000"
 1439      72727570 
 1439      74734D61 
 1439      736B00
 1440              	.LASF1:
 1441 015f 756E7369 		.ascii	"unsigned char\000"
 1441      676E6564 
 1441      20636861 
 1441      7200
 1442              	.LASF24:
 1443 016d 72696768 		.ascii	"rightEncTimer_ReadStatusRegister\000"
 1443      74456E63 
 1443      54696D65 
 1443      725F5265 
 1443      61645374 
 1444              	.LASF29:
 1445 018e 72696768 		.ascii	"rightEncTimer_WriteCounter\000"
 1445      74456E63 
 1445      54696D65 
 1445      725F5772 
 1445      69746543 
 1446              	.LASF12:
 1447 01a9 646F7562 		.ascii	"double\000"
 1447      6C6500
 1448              	.LASF35:
 1449 01b0 72696768 		.ascii	"rightEncTimer_ReadPeriod\000"
 1449      74456E63 
 1449      54696D65 
 1449      725F5265 
 1449      61645065 
 1450              	.LASF10:
 1451 01c9 75696E74 		.ascii	"uint16\000"
 1451      313600
 1452              	.LASF23:
 1453 01d0 72696768 		.ascii	"rightEncTimer_SetInterruptMode\000"
 1453      74456E63 
 1453      54696D65 
 1453      725F5365 
 1453      74496E74 
 1454              	.LASF8:
 1455 01ef 756E7369 		.ascii	"unsigned int\000"
 1455      676E6564 
 1455      20696E74 
 1455      00
 1456              	.LASF7:
 1457 01fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 1457      206C6F6E 
 1457      6720756E 
 1457      7369676E 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 38


 1457      65642069 
 1458              	.LASF25:
 1459 0213 72696768 		.ascii	"rightEncTimer_ReadControlRegister\000"
 1459      74456E63 
 1459      54696D65 
 1459      725F5265 
 1459      6164436F 
 1460              	.LASF21:
 1461 0235 72696768 		.ascii	"rightEncTimer_Stop\000"
 1461      74456E63 
 1461      54696D65 
 1461      725F5374 
 1461      6F7000
 1462              	.LASF17:
 1463 0248 6374726C 		.ascii	"ctrl\000"
 1463      00
 1464              	.LASF16:
 1465 024d 73697A65 		.ascii	"sizetype\000"
 1465      74797065 
 1465      00
 1466              	.LASF18:
 1467 0256 72696768 		.ascii	"rightEncTimer_interruptState\000"
 1467      74456E63 
 1467      54696D65 
 1467      725F696E 
 1467      74657272 
 1468              	.LASF6:
 1469 0273 6C6F6E67 		.ascii	"long long int\000"
 1469      206C6F6E 
 1469      6720696E 
 1469      7400
 1470              	.LASF13:
 1471 0281 63686172 		.ascii	"char\000"
 1471      00
 1472              	.LASF40:
 1473 0286 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1473      4320342E 
 1473      392E3320 
 1473      32303135 
 1473      30333033 
 1474 02b9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1474      20726576 
 1474      6973696F 
 1474      6E203232 
 1474      31323230 
 1475 02ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1475      66756E63 
 1475      74696F6E 
 1475      2D736563 
 1475      74696F6E 
 1476              	.LASF38:
 1477 0314 72696768 		.ascii	"rightEncTimer_ReadCompare\000"
 1477      74456E63 
 1477      54696D65 
 1477      725F5265 
 1477      6164436F 
 1478              	.LASF2:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccffrDrQ.s 			page 39


 1479 032e 73686F72 		.ascii	"short int\000"
 1479      7420696E 
 1479      7400
 1480              	.LASF39:
 1481 0338 72696768 		.ascii	"rightEncTimer_ClearFIFO\000"
 1481      74456E63 
 1481      54696D65 
 1481      725F436C 
 1481      65617246 
 1482              	.LASF41:
 1483 0350 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\rightEncTimer.c\000"
 1483      6E657261 
 1483      7465645F 
 1483      536F7572 
 1483      63655C50 
 1484              	.LASF4:
 1485 0379 6C6F6E67 		.ascii	"long int\000"
 1485      20696E74 
 1485      00
 1486              	.LASF43:
 1487 0382 72696768 		.ascii	"rightEncTimer_initVar\000"
 1487      74456E63 
 1487      54696D65 
 1487      725F696E 
 1487      69745661 
 1488              	.LASF0:
 1489 0398 7369676E 		.ascii	"signed char\000"
 1489      65642063 
 1489      68617200 
 1490              	.LASF37:
 1491 03a4 636F6D70 		.ascii	"compare\000"
 1491      61726500 
 1492              	.LASF32:
 1493 03ac 72696768 		.ascii	"rightEncTimer_ReadCapture\000"
 1493      74456E63 
 1493      54696D65 
 1493      725F5265 
 1493      61644361 
 1494              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
